//Stack Implementation using Array

#include <stdio.h>
#include <stdlib.h>
#define max 10
int count=0;
struct stack
{
    int a[max];
    int top;
};
typedef struct stack st;
void createstack(st *s)
{
    s->top=-1;
}
int isfull(st *s)
{
    if(s->top==max-1)
        return 1;
    else
        return 0;
}
int isempty(st *s)
{
    if(s->top==-1)
        return 1;
    else
        return 0;
}
void push(st *s,int item)
{
    if(isfull(s))
    {
        printf("\n stack is full\n");
        
    }
    else
    {
        s->top++;
        s->a[s->top]=item;
    }
    count++;
}
int pop(st *s)
{
    if(isempty(s))
    {
        printf("\n stack is empty\n");
    }
    else
    {
        printf("\n poped item=%d",s->a[s->top]);
        s->top--;
    }
    count--;
    printf("\n");
}
void print_array(st *s)
{
    printf("\nstack:");
    for(int i=0;i<count;i++)
    {   
        printf("%d ",s->a[i]);
    }
    printf("\n");
}

int main(void) {
	// your code goes here
	st *s=(st *)malloc(sizeof(st));
	createstack(s);
	push(s,1);
	push(s,3);
	push(s,0);
    push(s,4);
    
    
    print_array(s);
    
    pop(s);
    
    printf("\nAfter popping out\n");
    print_array(s);
	return 0;
}


