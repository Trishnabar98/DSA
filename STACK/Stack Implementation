//Stack Implementation using Array

#include <stdio.h>
#include <stdlib.h>
#define max 10
int count=0;
struct stack
{
    int a[max];
    int top;
};
typedef struct stack st;
void createstack(st *s)
{
    s->top=-1;
}
int isfull(st *s)
{
    if(s->top==max-1)
        return 1;
    else
        return 0;
}
int isempty(st *s)
{
    if(s->top==-1)
        return 1;
    else
        return 0;
}
void push(st *s,int item)
{
    if(isfull(s))
    {
        printf("\n stack is full\n");
        
    }
    else
    {
        s->top++;
        s->a[s->top]=item;
    }
    count++;
}
int pop(st *s)
{
    if(isempty(s))
    {
        printf("\n stack is empty\n");
    }
    else
    {
        printf("\n poped item=%d",s->a[s->top]);
        s->top--;
    }
    count--;
    printf("\n");
}
void print_array(st *s)
{
    printf("\nstack:");
    for(int i=0;i<count;i++)
    {   
        printf("%d ",s->a[i]);
    }
    printf("\n");
}

int main(void) {
	// your code goes here
	st *s=(st *)malloc(sizeof(st));
	createstack(s);
	push(s,1);
	push(s,3);
	push(s,0);
    push(s,4);
    
    
    print_array(s);
    
    pop(s);
    
    printf("\nAfter popping out\n");
    print_array(s);
	return 0;
}

//Stack Implementation using Linked List

#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node* next;
};
struct node*head;

void push()
{
    int val;
    struct node *ptr=(struct node*)malloc(sizeof(struct node));
    if(ptr==NULL)
    {
        printf("\nstack is full\n");
    }
    else
    {
        printf("enter the value of val:");
        scanf("%d",&val);
        if(head==NULL)
        {
            ptr->data=val;
            ptr->next=NULL;
            head=ptr;
        }
        else
        {
            ptr->data=val;
            ptr->next=head;
            head=ptr;
        }
        printf("\nItem pushed....!!!\n");
    }
}
void pop()
{
    int item;
    struct node* ptr;
    if(head==NULL)
    {
        printf("\nstack is empty\n");
    }
    else
    {
        item=head->data;
        ptr=head;
        head=head->next;
        free(ptr);
        printf("\n item is poped\n");
    }
    
}
void display()
{
    struct node* ptr=head;
    if(head==NULL)
    {
        printf("\nstack is empty\n");
    }
    else
    {
        printf("stack elements\n");
        while(ptr)
        {
            printf("%d ",ptr->data);
            ptr=ptr->next;
        }
    }
}
void main ()  
{  
    int choice=0;     
printf("\n*******Stack operations using linked list*********\n");  
     
    while(choice != 4)  
    {  
        printf("\n\nChose one from the below options...\n");  
        printf("\n1.Push\n2.Pop\n3.Display\n4.Exit\n");  
        printf("\nEnter your choice\n");        
        scanf("%d",&choice);  
        switch(choice)  
        {  
            case 1:  
            {   
                push();  
                break;  
            }  
            case 2:  
            {  
                pop();  
                break;  
            }  
            case 3:  
            {  
                display();  
                break;  
            }  
            case 4:   
            {  
                printf("Exiting....");  
                break;   
            }  
            default:  
            {  
                printf("Please Enter valid choice ");  
            }   
    };  
}  
}  


