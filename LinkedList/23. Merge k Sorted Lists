Qs:-


Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

Example:

Input:
[
  1->4->5,
  1->3->4,
  2->6
]
Output: 1->1->2->3->4->4->5->6
===================================================================================================================


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        return pass(lists,0,lists.length-1);
        
    }
    private ListNode pass(ListNode[] lists,int low,int high)
    {
        if(low>high)
            return null;
        if(low==high)
            return lists[low];
        int mid=(low+high)/2;
        
        return mergelist(pass(lists,low,mid),pass(lists,mid+1,high));
    }
    private ListNode mergelist(ListNode l1,ListNode l2)
    {
        if(l1==null)return l2;
        if(l2==null)return l1;
        if(l1.val<l2.val)
        {
            l1.next=mergelist(l1.next,l2);
            return l1;
        }
        else
        {
            l2.next=mergelist(l1,l2.next);
            return l2;
        }
    }
}
