Qs:-

Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
=====================================================================================================================================

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int distance = 0;
    ListNode current = head;
    while(null != current){
        current = current.next;
        if(++distance == n+1){
            break;
        }
    }
    if(distance <= n){
        return head.next;
    }
    ListNode slow = head;
    while(null != current){
        current  = current.next;
        slow = slow.next;
    }
    slow.next = slow.next.next;
    return head;
        
    }
}
