Qs:-
Suppose a sorted array A is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

The array will not contain duplicates.
===================================================================================================================================
/**
 * @input A : Read only ( DON'T MODIFY ) Integer array
 * @input n1 : Integer array's ( A ) length
 * 
 * @Output Integer
 */
int findMin(const int* A, int n1) {
   
    int low=0; int high=n1-1; int index=0; 
    while(low<=high)
    {
        int mid = (low+high)/2;
        if(A[mid]<A[index]) 
        {
        index=mid;
        high = mid-1;
        }
        else
        { 
            low=mid+1; 
            
        } 
    }
return A[index];
}


